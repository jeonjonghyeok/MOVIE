
/* Drop Triggers */

DROP TRIGGER TRI_CLIENT_CLIENT_ID;
DROP TRIGGER TRI_COMMENTS_COMMENTS_ID;
DROP TRIGGER TRI_MOVIE_MOVIE_ID;
DROP TRIGGER TRI_RESERVE_RESERVE_ID;
DROP TRIGGER TRI_THEATER_THEATER_ID;



/* Drop Tables */

DROP TABLE COMMENTS CASCADE CONSTRAINTS;
DROP TABLE RESERVE CASCADE CONSTRAINTS;
DROP TABLE CLIENT CASCADE CONSTRAINTS;
DROP TABLE MOVIE CASCADE CONSTRAINTS;
DROP TABLE THEATER CASCADE CONSTRAINTS;



/* Drop Sequences */

DROP SEQUENCE SEQ_CLIENT_CLIENT_ID;
DROP SEQUENCE SEQ_COMMENTS_COMMENTS_ID;
DROP SEQUENCE SEQ_MOVIE_MOVIE_ID;
DROP SEQUENCE SEQ_RESERVE_RESERVE_ID;
DROP SEQUENCE SEQ_THEATER_THEATER_ID;




/* Create Sequences */

CREATE SEQUENCE SEQ_CLIENT_CLIENT_ID INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_COMMENTS_COMMENTS_ID INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_MOVIE_MOVIE_ID INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_RESERVE_RESERVE_ID INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_THEATER_THEATER_ID INCREMENT BY 1 START WITH 1;



/* Create Tables */

CREATE TABLE CLIENT
(
	CLIENT_ID number NOT NULL,
	USERID varchar2(20),
	PASSWORD varchar2(20),
	CLIENT_DATE timestamp,
	PRIMARY KEY (CLIENT_ID)
);


CREATE TABLE COMMENTS
(
	COMMENTS_ID number NOT NULL,
	CLIENT_ID number NOT NULL,
	MOVIE_ID number NOT NULL,
	TITLE varchar2(100),
	PRIMARY KEY (COMMENTS_ID)
);


CREATE TABLE MOVIE
(
	MOVIE_ID number NOT NULL,
	MOVIE_NAME varchar2(100),
	DESCRIPTION varchar2(3000),
	MOVIE_DATE timestamp,
	PRIMARY KEY (MOVIE_ID)
);


CREATE TABLE RESERVE
(
	RESERVE_ID number NOT NULL,
	CLIENT_ID number NOT NULL,
	MOVIE_ID number NOT NULL,
	THEATER_ID number NOT NULL,
	RESERVE_DATE timestamp,
	PRIMARY KEY (RESERVE_ID)
);


CREATE TABLE THEATER
(
	THEATER_ID number NOT NULL,
	CITY varchar2(20),
	PRIMARY KEY (THEATER_ID)
);



/* Create Foreign Keys */

ALTER TABLE COMMENTS
	ADD FOREIGN KEY (CLIENT_ID)
	REFERENCES CLIENT (CLIENT_ID)
;


ALTER TABLE RESERVE
	ADD FOREIGN KEY (CLIENT_ID)
	REFERENCES CLIENT (CLIENT_ID)
;


ALTER TABLE COMMENTS
	ADD FOREIGN KEY (MOVIE_ID)
	REFERENCES MOVIE (MOVIE_ID)
;


ALTER TABLE RESERVE
	ADD FOREIGN KEY (MOVIE_ID)
	REFERENCES MOVIE (MOVIE_ID)
;


ALTER TABLE RESERVE
	ADD FOREIGN KEY (THEATER_ID)
	REFERENCES THEATER (THEATER_ID)
;



/* Create Triggers */

CREATE OR REPLACE TRIGGER TRI_CLIENT_CLIENT_ID BEFORE INSERT ON CLIENT
FOR EACH ROW
BEGIN
	SELECT SEQ_CLIENT_CLIENT_ID.nextval
	INTO :new.CLIENT_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_COMMENTS_COMMENTS_ID BEFORE INSERT ON COMMENTS
FOR EACH ROW
BEGIN
	SELECT SEQ_COMMENTS_COMMENTS_ID.nextval
	INTO :new.COMMENTS_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_MOVIE_MOVIE_ID BEFORE INSERT ON MOVIE
FOR EACH ROW
BEGIN
	SELECT SEQ_MOVIE_MOVIE_ID.nextval
	INTO :new.MOVIE_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_RESERVE_RESERVE_ID BEFORE INSERT ON RESERVE
FOR EACH ROW
BEGIN
	SELECT SEQ_RESERVE_RESERVE_ID.nextval
	INTO :new.RESERVE_ID
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_THEATER_THEATER_ID BEFORE INSERT ON THEATER
FOR EACH ROW
BEGIN
	SELECT SEQ_THEATER_THEATER_ID.nextval
	INTO :new.THEATER_ID
	FROM dual;
END;

/




